{{define "index"}}
<!doctype html>
<html translate="no">
	<head>
		{{template "head"}}
		<meta content="Welp, that's a website" property="og:title">
		<meta content="Index page - it has some useful info on it" property="og:description">
		<meta content="https://wz2100-autohost.net/" property="og:url">
		<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/hammerjs@2.0.8"></script>
		<script src="https://github.com/chartjs/chartjs-plugin-zoom/releases/download/v1.1.1/chartjs-plugin-zoom.min.js"></script>
	</head>
	<body>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8" crossorigin="anonymous"></script>
		{{template "NavPanel" . }}
		<div class="px-4 py-5 container">
			<h2>Welcome to wz2100-autohost.net website</h2>
			<p>Home of Autohoster - automatic hosting system with ratings and replays.
				Everyone can request room and get dedicated host for Warzone 2100.
				Autohoster can read chat, respond to your commands and provide leaderbords.
				With authentication you can also proof to others that you are legit player</p>
			<h4>Useful links</h4>
			<ul>
				<li><a href="/lobby">Web version of lobby</a></li>
				<li><a href="https://wz2100.euphobos.ru/maps">Map database</a></li>
				<li><a href="https://wz2100.net">Official website</a></li>
				<li><a href="https://discord.gg/qBWAaRQ9gU">Official discord</a></li>
			</ul>
			<p>Due to malicious activity from some community members all actions require authentication on website.
				You can register account and ask for permissions in Discord. (MaX#6717 aka Tactical Pepe)
				For easier interation we sorted out most interesting and balanced maps. If you have suggestions
				on how to improve website or Autohoster you can DM me in Discord.</p> 
			<p>We are accepting donations:
				<ul>
					<li><a href="https://opencollective.com/warzone2100">Open Collective</a></li>
				</ul>
			</p>
			<table class="table">
				<tr>
					<td>
						{{if avail "LoadAvg" .}}<p>Server load: {{.LoadAvg.Load1}} {{.LoadAvg.Load5}} {{.LoadAvg.Load15}}</p>{{end}}
					</td><td>
						{{if avail "VirtMem" .}}<p>Server RAM: {{FormatBytes .VirtMem.Used}}/{{FormatBytes .VirtMem.Total}} ({{FormatPercent .VirtMem.UsedPercent}})</p>{{end}}
					</td><td>
						{{if avail "Uptime" .}}<p>Server uptime: {{.Uptime}}</p>{{end}}
					</td>
				</tr>
			</table>
			<!-- <div>
				<div id="LoadGraphBtn" class="btn btn-primary" onclick="LoadGraph();document.getElementById(`LoadGraphBtn`).style.display = `none`;">Load graph</div>
				<div id="LoadingGraphText" style="display:none">Loading graph, please wait...</div>
			</div> -->
			<div class="graphContainer" style="height:500px">
				<canvas id="GraphCanvas"></canvas>
			</div>
			<script>
			window.onload = function () {
				LoadGraph();
			}
			function PlotData(JsonData) {
				const resp = JSON.parse(JsonData);
				let data = {};
				resp.forEach((i) => {
					const date = Object.keys(i)[0].split(" ")[0];
					const count = Object.values(i)[0];
					Object.assign(data, {[date]: count })
				});
				let avgData = {};
				let avgPast = 7;
				for(let i = avgPast; i < resp.length; i++) {
					// console.log(i, resp[i]);
					let avgv = 0;
					let avgc = avgPast;
					for(let j = 0; j < avgPast; j++) {
						avgv += Object.values(resp[i-j])[0]
					}
					const date = Object.keys(resp[i])[0].split(" ")[0];
					Object.assign(avgData, {[date]: avgv/avgc })
					// console.log(i, date, avgv/avgc);
				}
				// resp.forEach((i) => {
				// 	const date = Object.keys(i)[0].split(" ")[0];
				// 	const count = Object.values(i)[0];
				// 	Object.assign(data, {[date]: count })
				// });
				var ctx = document.getElementById('GraphCanvas').getContext('2d');
				var labels = Object.keys(resp);
				chart = new Chart(ctx, {
					type: 'line', parsing: false, normalized: true,
					data: {datasets: [{
						label: 'Games count',
						data: data,
						borderColor: 'rgba(0, 119, 204, 0.3)',
						backgroundColor: 'rgba(0, 119, 204, 0.3)'
					},
					{
						label: 'Games 7 day average',
						data: avgData,
						borderColor: 'rgba(0, 119, 204, 1)',
						backgroundColor: 'rgba(0, 119, 204, 1)',
						tension: 0.4
					}]},
					options: {spanGaps: true, showLine: true,
						animation: {duration: 0}, responsive: true, maintainAspectRatio: false,
						plugins: {
							legend: {position: 'top'},
							title: {display: true, text: 'Games count', position: 'top'},
							zoom: {
								pan: {enabled: true, mode: 'x'},
								zoom: {
									wheel: {enabled: true},
									pinch: {enabled: true},
									mode: 'x',
								}
							}
						}, radius: 1,
						scales: {
						}
					}
				});
			}
			
				// x: {title: {display: true, text: 'time'}},
				// y : {stacked: false,
				// 	title: {display: true, text: 'Value'}
				// }
			function LoadGraph() {
				// document.getElementById(`LoadingGraphText`).style.display = `block`;
				var xhr = new XMLHttpRequest();
				xhr.onreadystatechange = function() {
					if (xhr.readyState === 4 && xhr.status === 200) {
						PlotData(xhr.response);
						// document.getElementById(`LoadingGraphText`).style.display = `none`;
					}
				}
				xhr.open('GET', window.location.origin+'/api/gamecount/day', true);
				xhr.send(null);
			}
			</script>
		</div>
	</body>
	<!-- Cloudflare Web Analytics --><script defer src='https://static.cloudflareinsights.com/beacon.min.js' data-cf-beacon='{"token": "7ec885fe35c644aca7c6ae861471372a"}'></script><!-- End Cloudflare Web Analytics -->
</html>
{{end}}
